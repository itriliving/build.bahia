<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Villa Bahia - Financial Analysis Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-color: #1e3a8a;
            --secondary-color: #0284c7;
            --success-color: #10b981;
            --warning-color: #f59e0b;
            --danger-color: #ef4444;
            --dark-gray: #1f2937;
            --light-gray: #f3f4f6;
            --white: #ffffff;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--light-gray);
            color: var(--dark-gray);
            line-height: 1.6;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header Styles */
        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            padding: 30px 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .header-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .sync-status {
            margin-top: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .sync-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: #10b981;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        /* Tab Navigation */
        .tabs {
            background-color: var(--white);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .tab-list {
            display: flex;
            flex-wrap: wrap;
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .tab-button {
            background: none;
            border: none;
            padding: 15px 25px;
            font-size: 1rem;
            cursor: pointer;
            color: var(--dark-gray);
            border-bottom: 3px solid transparent;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .tab-button:hover {
            background-color: var(--light-gray);
        }

        .tab-button.active {
            color: var(--primary-color);
            border-bottom-color: var(--primary-color);
            font-weight: 600;
        }

        /* Tab Content */
        .tab-content {
            display: none;
            animation: fadeIn 0.3s ease-in;
        }

        .tab-content.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Card Styles */
        .card {
            background-color: var(--white);
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            padding: 24px;
            margin-bottom: 24px;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark-gray);
        }

        /* Grid Layouts */
        .grid {
            display: grid;
            gap: 24px;
        }

        .grid-2 {
            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
        }

        .grid-3 {
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        }

        .grid-4 {
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        }

        /* KPI Cards */
        .kpi-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .kpi-card {
            background: var(--white);
            border-radius: 12px;
            padding: 24px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
        }

        .kpi-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
        }

        .kpi-label {
            font-size: 0.875rem;
            color: #6b7280;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .kpi-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 8px;
        }

        .kpi-trend {
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .trend-up {
            color: var(--success-color);
        }

        .trend-down {
            color: var(--danger-color);
        }

        /* Tables */
        .table-container {
            overflow-x: auto;
            margin-top: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            font-size: 0.95rem;
        }

        th {
            background-color: var(--light-gray);
            color: var(--dark-gray);
            font-weight: 600;
            text-align: left;
            padding: 12px 16px;
            border-bottom: 2px solid #e5e7eb;
        }

        td {
            padding: 12px 16px;
            border-bottom: 1px solid #e5e7eb;
        }

        tr:hover {
            background-color: #f9fafb;
        }

        /* Progress Bars */
        .progress-bar {
            width: 100%;
            height: 8px;
            background-color: #e5e7eb;
            border-radius: 4px;
            overflow: hidden;
            margin-top: 8px;
        }

        .progress-fill {
            height: 100%;
            background-color: var(--success-color);
            border-radius: 4px;
            transition: width 0.3s ease;
        }

        /* Buttons */
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-size: 0.95rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: var(--white);
        }

        .btn-primary:hover {
            background-color: #1e40af;
            transform: translateY(-1px);
        }

        .btn-secondary {
            background-color: var(--light-gray);
            color: var(--dark-gray);
        }

        .btn-secondary:hover {
            background-color: #e5e7eb;
        }

        /* Select Dropdown */
        select {
            padding: 8px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 0.95rem;
            background-color: var(--white);
            cursor: pointer;
        }

        /* Alert Boxes */
        .alert {
            padding: 16px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .alert-warning {
            background-color: #fef3c7;
            color: #92400e;
            border: 1px solid #fbbf24;
        }

        .alert-danger {
            background-color: #fee2e2;
            color: #991b1b;
            border: 1px solid #f87171;
        }

        .alert-success {
            background-color: #d1fae5;
            color: #065f46;
            border: 1px solid #34d399;
        }

        /* Chart Container */
        .chart-container {
            position: relative;
            height: 300px;
            margin-top: 20px;
        }

        /* Loading Spinner */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: var(--primary-color);
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .grid-2, .grid-3, .grid-4 {
                grid-template-columns: 1fr;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .tab-list {
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }
        }

        /* Print Styles */
        @media print {
            .tabs, .btn, select {
                display: none;
            }
            
            .card {
                break-inside: avoid;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="header-content">
            <h1>Villa Bahia Financial Analysis Dashboard</h1>
            <p class="header-subtitle">Construction Project Financial Tracking & Analysis (2022 - Present)</p>
            <div class="sync-status">
                <div class="sync-indicator"></div>
                <span id="syncStatus">Connected to Google Sheets API</span>
                <button class="btn btn-secondary" style="margin-left: 20px;" onclick="syncData()">
                    <span>🔄</span> Sync Data
                </button>
            </div>
        </div>
    </header>

    <!-- Tab Navigation -->
    <nav class="tabs">
        <div class="tab-list">
            <button class="tab-button active" onclick="showTab('executive')">Executive Summary</button>
            <button class="tab-button" onclick="showTab('cashflow')">Cash Flow Analysis</button>
            <button class="tab-button" onclick="showTab('vendors')">Vendor Analysis</button>
            <button class="tab-button" onclick="showTab('financing')">Financing Structure</button>
            <button class="tab-button" onclick="showTab('costs')">Cost Breakdown</button>
            <button class="tab-button" onclick="showTab('kpis')">KPIs & Metrics</button>
            <button class="tab-button" onclick="showTab('risk')">Risk Analysis</button>
            <button class="tab-button" onclick="showTab('projections')">Projections</button>
            <button class="tab-button" onclick="showTab('monitoring')">Monthly Monitor</button>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container">
        <!-- Executive Summary Tab -->
        <div id="executive" class="tab-content active">
            <div class="kpi-grid">
                <div class="kpi-card">
                    <div class="kpi-label">Total Investment Planned</div>
                    <div class="kpi-value">$1.76M</div>
                    <div class="kpi-trend trend-up">MAD 15,840,000</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Investment Realized</div>
                    <div class="kpi-value" id="investmentRealized">$0</div>
                    <div class="kpi-trend" id="investmentProgress">0% Complete</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Monthly Burn Rate</div>
                    <div class="kpi-value" id="burnRate">$0</div>
                    <div class="kpi-trend" id="burnTrend">Calculating...</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Cash Runway</div>
                    <div class="kpi-value" id="cashRunway">0</div>
                    <div class="kpi-trend">Months Remaining</div>
                </div>
            </div>

            <div class="grid grid-2">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Project Status Overview</h2>
                    </div>
                    <div class="alert alert-warning">
                        <span>⚠️</span>
                        <span>Construction budget variance detected: -5.58% from initial budget</span>
                    </div>
                    <div class="chart-container">
                        <canvas id="projectStatusChart"></canvas>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Investment Breakdown</h2>
                    </div>
                    <div class="chart-container">
                        <canvas id="investmentBreakdownChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Executive Financial Summary</h2>
                </div>
                <div class="table-container">
                    <table id="executiveSummaryTable">
                        <thead>
                            <tr>
                                <th>Category</th>
                                <th>Budget (MAD)</th>
                                <th>Actual (MAD)</th>
                                <th>Variance</th>
                                <th>% Complete</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Land Acquisition</td>
                                <td>3,870,000</td>
                                <td id="landActual">0</td>
                                <td id="landVariance">0</td>
                                <td id="landProgress">0%</td>
                                <td><span class="badge">Pending</span></td>
                            </tr>
                            <tr>
                                <td>Construction</td>
                                <td>4,500,000</td>
                                <td id="constructionActual">0</td>
                                <td id="constructionVariance">0</td>
                                <td id="constructionProgress">0%</td>
                                <td><span class="badge">In Progress</span></td>
                            </tr>
                            <tr>
                                <td>Decoration</td>
                                <td>1,080,000</td>
                                <td id="decorationActual">0</td>
                                <td id="decorationVariance">0</td>
                                <td id="decorationProgress">0%</td>
                                <td><span class="badge">Pending</span></td>
                            </tr>
                            <tr>
                                <td>Equipment</td>
                                <td>3,600,000</td>
                                <td id="equipmentActual">0</td>
                                <td id="equipmentVariance">0</td>
                                <td id="equipmentProgress">0%</td>
                                <td><span class="badge">Pending</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Cash Flow Analysis Tab -->
        <div id="cashflow" class="tab-content">
            <div class="kpi-grid">
                <div class="kpi-card">
                    <div class="kpi-label">Total Inflows</div>
                    <div class="kpi-value" id="totalInflows">$0</div>
                    <div class="kpi-trend">All Sources</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Total Outflows</div>
                    <div class="kpi-value" id="totalOutflows">$0</div>
                    <div class="kpi-trend">All Expenses</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Net Cash Position</div>
                    <div class="kpi-value" id="netCashPosition">$0</div>
                    <div class="kpi-trend" id="cashTrend">0%</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Working Capital</div>
                    <div class="kpi-value" id="workingCapital">$0</div>
                    <div class="kpi-trend">Current Assets - Liabilities</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Monthly Cash Flow Trend</h2>
                    <select id="cashflowPeriod" onchange="updateCashflowChart()">
                        <option value="all">All Time</option>
                        <option value="2024">2024</option>
                        <option value="2023">2023</option>
                        <option value="2022">2022</option>
                    </select>
                </div>
                <div class="chart-container" style="height: 400px;">
                    <canvas id="cashflowChart"></canvas>
                </div>
            </div>

            <div class="grid grid-2">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Cash Flow Waterfall</h2>
                    </div>
                    <div class="chart-container">
                        <canvas id="waterfallChart"></canvas>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Seasonal Spending Patterns</h2>
                    </div>
                    <div class="chart-container">
                        <canvas id="seasonalChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Vendor Analysis Tab -->
        <div id="vendors" class="tab-content">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Top Contractors by Payment Volume</h2>
                    <select id="vendorFilter" onchange="filterVendors()">
                        <option value="all">All Categories</option>
                        <option value="construction">Construction</option>
                        <option value="technical">Technical</option>
                        <option value="finishing">Finishing</option>
                        <option value="other">Other</option>
                    </select>
                </div>
                <div class="grid grid-2">
                    <div class="chart-container">
                        <canvas id="vendorChart"></canvas>
                    </div>
                    <div class="table-container">
                        <table id="vendorTable">
                            <thead>
                                <tr>
                                    <th>Contractor</th>
                                    <th>Total Paid (MAD)</th>
                                    <th>Payments</th>
                                    <th>Category</th>
                                </tr>
                            </thead>
                            <tbody id="vendorTableBody">
                                <!-- Dynamic content -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Payment Distribution Analysis</h2>
                </div>
                <div class="grid grid-3">
                    <div class="kpi-card">
                        <div class="kpi-label">Active Vendors</div>
                        <div class="kpi-value" id="activeVendors">0</div>
                        <div class="kpi-trend">Total Contractors</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Avg Transaction Size</div>
                        <div class="kpi-value" id="avgTransaction">$0</div>
                        <div class="kpi-trend">Per Payment</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Payment Frequency</div>
                        <div class="kpi-value" id="paymentFrequency">0</div>
                        <div class="kpi-trend">Days Between Payments</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Financing Structure Tab -->
        <div id="financing" class="tab-content">
            <div class="kpi-grid">
                <div class="kpi-card">
                    <div class="kpi-label">Total Loans Received</div>
                    <div class="kpi-value" id="totalLoans">$0</div>
                    <div class="kpi-trend">All Lenders</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Interest/Fees Paid</div>
                    <div class="kpi-value" id="totalInterest">$0</div>
                    <div class="kpi-trend" id="interestRate">2.5% p.a.</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Loan-to-Cost Ratio</div>
                    <div class="kpi-value" id="ltcRatio">0%</div>
                    <div class="kpi-trend">Of Total Project</div>
                </div>
                <div class="kpi-card">
                    <div class="kpi-label">Debt Service Coverage</div>
                    <div class="kpi-value" id="dscr">0x</div>
                    <div class="kpi-trend">DSCR</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Financing Sources Breakdown</h2>
                </div>
                <div class="grid grid-2">
                    <div class="chart-container">
                        <canvas id="financingPieChart"></canvas>
                    </div>
                    <div>
                        <h3 style="margin-bottom: 15px;">Loan Details by Lender</h3>
                        <div id="lenderDetails">
                            <!-- Dynamic lender cards -->
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Loan Injection Timeline</h2>
                </div>
                <div class="chart-container" style="height: 300px;">
                    <canvas id="loanTimelineChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Cost Breakdown Tab -->
        <div id="costs" class="tab-content">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Construction Cost Analysis</h2>
                </div>
                <div class="grid grid-4">
                    <div class="kpi-card">
                        <div class="kpi-label">Cost per Suite</div>
                        <div class="kpi-value" id="costPerSuite">$0</div>
                        <div class="kpi-trend">Total / 5 Suites</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Cost per m²</div>
                        <div class="kpi-value" id="costPerSqm">$0</div>
                        <div class="kpi-trend">Construction Area</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Budget Utilization</div>
                        <div class="kpi-value" id="budgetUtilization">0%</div>
                        <div class="kpi-trend">Of Total Budget</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Cost Overrun Risk</div>
                        <div class="kpi-value" id="overrunRisk">Low</div>
                        <div class="kpi-trend">Based on Current Trend</div>
                    </div>
                </div>

                <div class="grid grid-2">
                    <div class="card">
                        <h3 class="card-title">Cost by Category</h3>
                        <div class="chart-container">
                            <canvas id="costCategoryChart"></canvas>
                        </div>
                    </div>
                    <div class="card">
                        <h3 class="card-title">Cost by Phase</h3>
                        <div class="chart-container">
                            <canvas id="costPhaseChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Detailed Cost Breakdown</h2>
                </div>
                <div class="table-container">
                    <table id="costBreakdownTable">
                        <thead>
                            <tr>
                                <th>Category</th>
                                <th>Sub-Category</th>
                                <th>Budget (MAD)</th>
                                <th>Actual (MAD)</th>
                                <th>Variance %</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td rowspan="5">Etudes</td>
                                <td>Architecte</td>
                                <td>100,000</td>
                                <td id="archActual">0</td>
                                <td id="archVariance">0%</td>
                                <td>In Progress</td>
                            </tr>
                            <tr>
                                <td>OPC</td>
                                <td>30,000</td>
                                <td id="opcActual">0</td>
                                <td id="opcVariance">0%</td>
                                <td>Pending</td>
                            </tr>
                            <tr>
                                <td>Etudes Techniques Terrain</td>
                                <td>16,500</td>
                                <td id="terrainActual">0</td>
                                <td id="terrainVariance">0%</td>
                                <td>Complete</td>
                            </tr>
                            <tr>
                                <td>Etudes Techniques Construction</td>
                                <td>80,000</td>
                                <td id="techActual">0</td>
                                <td id="techVariance">0%</td>
                                <td>In Progress</td>
                            </tr>
                            <tr>
                                <td>Etudes Supp/ Chgmt Voc</td>
                                <td>42,000</td>
                                <td id="suppActual">0</td>
                                <td id="suppVariance">0%</td>
                                <td>Pending</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- KPIs & Metrics Tab -->
        <div id="kpis" class="tab-content">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Key Performance Indicators Dashboard</h2>
                </div>
                
                <h3 style="margin: 20px 0;">Financial Health Metrics</h3>
                <div class="grid grid-4">
                    <div class="kpi-card">
                        <div class="kpi-label">Cost Performance Index</div>
                        <div class="kpi-value" id="cpi">0.00</div>
                        <div class="kpi-trend" id="cpiTrend">Target: >1.0</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Schedule Performance Index</div>
                        <div class="kpi-value" id="spi">0.00</div>
                        <div class="kpi-trend" id="spiTrend">Target: >1.0</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Cash Conversion Cycle</div>
                        <div class="kpi-value" id="ccc">0</div>
                        <div class="kpi-trend">Days</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Payment Velocity</div>
                        <div class="kpi-value" id="paymentVelocity">0</div>
                        <div class="kpi-trend">Days Between Payments</div>
                    </div>
                </div>

                <h3 style="margin: 20px 0;">Operational Efficiency Metrics</h3>
                <div class="grid grid-3">
                    <div class="kpi-card">
                        <div class="kpi-label">Banking Fees %</div>
                        <div class="kpi-value" id="bankingFeesPercent">0%</div>
                        <div class="kpi-trend">Of Total Costs</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">WACC</div>
                        <div class="kpi-value" id="wacc">0%</div>
                        <div class="kpi-trend">Weighted Avg Cost of Capital</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Cost Control Effectiveness</div>
                        <div class="kpi-value" id="costControl">0%</div>
                        <div class="kpi-trend">Budget Adherence</div>
                    </div>
                </div>
            </div>

            <div class="grid grid-2">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Performance Trends</h2>
                    </div>
                    <div class="chart-container">
                        <canvas id="performanceTrendChart"></canvas>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Budget vs Actual Progress</h2>
                    </div>
                    <div class="chart-container">
                        <canvas id="budgetProgressChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Risk Analysis Tab -->
        <div id="risk" class="tab-content">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Risk Assessment Matrix</h2>
                </div>
                
                <div class="grid grid-2">
                    <div>
                        <h3>Critical Risks Identified</h3>
                        <div id="riskAlerts">
                            <!-- Dynamic risk alerts -->
                        </div>
                    </div>
                    <div class="chart-container">
                        <canvas id="riskMatrixChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="grid grid-3">
                <div class="card">
                    <h3 class="card-title">Contractor Dependency</h3>
                    <div class="chart-container">
                        <canvas id="contractorRiskChart"></canvas>
                    </div>
                </div>
                <div class="card">
                    <h3 class="card-title">Financing Concentration</h3>
                    <div class="chart-container">
                        <canvas id="financingRiskChart"></canvas>
                    </div>
                </div>
                <div class="card">
                    <h3 class="card-title">Cost Escalation Risk</h3>
                    <div class="chart-container">
                        <canvas id="costRiskChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Projections Tab -->
        <div id="projections" class="tab-content">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Financial Projections & Scenarios</h2>
                </div>
                
                <div class="alert alert-warning">
                    <span>📊</span>
                    <span>Projections based on current spending patterns and historical data</span>
                </div>

                <div class="grid grid-4">
                    <div class="kpi-card">
                        <div class="kpi-label">Est. Completion Cost</div>
                        <div class="kpi-value" id="estCompletionCost">$0</div>
                        <div class="kpi-trend">Based on Current Trend</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Additional Financing Need</div>
                        <div class="kpi-value" id="additionalFinancing">$0</div>
                        <div class="kpi-trend">Gap Analysis</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Est. Completion Date</div>
                        <div class="kpi-value" id="estCompletionDate">--</div>
                        <div class="kpi-trend">Based on Progress</div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-label">Budget Overrun Risk</div>
                        <div class="kpi-value" id="overrunProbability">0%</div>
                        <div class="kpi-trend">Probability</div>
                    </div>
                </div>

                <div class="card">
                    <h3 class="card-title">Cash Flow Projections (Next 6 Months)</h3>
                    <div class="chart-container" style="height: 400px;">
                        <canvas id="projectionChart"></canvas>
                    </div>
                </div>

                <div class="grid grid-3">
                    <div class="card">
                        <h3>Best Case Scenario</h3>
                        <ul>
                            <li>Completion Cost: <strong id="bestCaseCost">$0</strong></li>
                            <li>Timeline: <strong id="bestCaseTime">0 months</strong></li>
                            <li>ROI Start: <strong id="bestCaseROI">--</strong></li>
                        </ul>
                    </div>
                    <div class="card">
                        <h3>Most Likely Scenario</h3>
                        <ul>
                            <li>Completion Cost: <strong id="likelyCaseCost">$0</strong></li>
                            <li>Timeline: <strong id="likelyCaseTime">0 months</strong></li>
                            <li>ROI Start: <strong id="likelyCaseROI">--</strong></li>
                        </ul>
                    </div>
                    <div class="card">
                        <h3>Worst Case Scenario</h3>
                        <ul>
                            <li>Completion Cost: <strong id="worstCaseCost">$0</strong></li>
                            <li>Timeline: <strong id="worstCaseTime">0 months</strong></li>
                            <li>ROI Start: <strong id="worstCaseROI">--</strong></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Monthly Monitoring Tab -->
        <div id="monitoring" class="tab-content">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">Monthly Monitoring Template</h2>
                    <select id="monthSelect" onchange="updateMonthlyReport()">
                        <option value="current">Current Month</option>
                        <option value="last">Last Month</option>
                        <option value="custom">Custom Period</option>
                    </select>
                </div>

                <div class="grid grid-2">
                    <div>
                        <h3>Monthly Summary</h3>
                        <table>
                            <tr>
                                <td>Period:</td>
                                <td><strong id="monitorPeriod">--</strong></td>
                            </tr>
                            <tr>
                                <td>Total Inflows:</td>
                                <td><strong id="monthlyInflows">$0</strong></td>
                            </tr>
                            <tr>
                                <td>Total Outflows:</td>
                                <td><strong id="monthlyOutflows">$0</strong></td>
                            </tr>
                            <tr>
                                <td>Net Cash Flow:</td>
                                <td><strong id="monthlyNet">$0</strong></td>
                            </tr>
                            <tr>
                                <td>Major Expenses:</td>
                                <td><strong id="majorExpenses">--</strong></td>
                            </tr>
                        </table>
                    </div>
                    <div>
                        <h3>Action Items</h3>
                        <div id="actionItems">
                            <!-- Dynamic action items -->
                        </div>
                    </div>
                </div>

                <div class="card">
                    <h3>Recommendations</h3>
                    <div id="monthlyRecommendations">
                        <!-- Dynamic recommendations -->
                    </div>
                </div>

                <div style="margin-top: 30px; text-align: center;">
                    <button class="btn btn-primary" onclick="exportReport()">
                        📊 Export Monthly Report
                    </button>
                    <button class="btn btn-secondary" onclick="printReport()">
                        🖨️ Print Report
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables for data storage
        let bankData = [];
        let processedData = {};
        let charts = {};

        // API configuration
        const API_URL = 'https://script.googleusercontent.com/a/macros/magfin.com/echo?user_content_key=AehSKLg5YCmguMaJpwUACr_SrRrGBazNMM7GXSw6BuKmB6GPaV8VpqAfkBuQV25NNJcK1R7RYQ8ehEv5Q7z4IbDnu26gGOHNAXB6XrT_H6bo_ryDn6pSc-DORzzgMJC4WoDdbXz-Qj0M8YRT9adjsjgkpXayLpKm85pUdojzqZahCpWiR3hpuwySSii3YyqIWIJ3jFTnu2hux3f1ELvXYZokBnKPvZ5UicGKlfi5P3zjEqbFHfkRPs2oa_QMRvmgCPE3J8zKcmjN0-lvKyfPEgHSX4o1W1DyaVlkl8iP0HE3m-35nechrPI&lib=MYPuMJU1N0PFVi3t-G1lly1MMAzA0YfEE';

        // Initialize on page load
        window.addEventListener('DOMContentLoaded', () => {
            initializeCharts();
            syncData();
        });

        // Tab switching functionality
        function showTab(tabName) {
            // Hide all tabs
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Remove active class from all buttons
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Show selected tab
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked button
            event.target.classList.add('active');
            
            // Update charts if needed
            if (charts[tabName + 'Chart']) {
                charts[tabName + 'Chart'].update();
            }
        }

        // Sync data from Google Sheets API
        async function syncData() {
            const syncStatus = document.getElementById('syncStatus');
            syncStatus.textContent = 'Syncing data...';
            
            try {
                const response = await fetch(API_URL);
                const data = await response.json();
                
                if (data && data.data) {
                    bankData = data.data;
                    processData();
                    updateAllDisplays();
                    syncStatus.textContent = `Data synced successfully (${bankData.length} transactions)`;
                } else {
                    throw new Error('Invalid data format');
                }
            } catch (error) {
                console.error('Sync error:', error);
                syncStatus.textContent = 'Sync failed - Using sample data';
                useSampleData();
            }
        }

        // Process raw bank data
        function processData() {
            processedData = {
                totalInflows: 0,
                totalOutflows: 0,
                monthlyData: {},
                vendors: {},
                loans: {},
                categories: {
                    construction: 0,
                    studies: 0,
                    equipment: 0,
                    fees: 0,
                    other: 0
                }
            };

            bankData.forEach(transaction => {
                const amount = parseFloat(transaction.Montant) || 0;
                const date = new Date(transaction.Date);
                const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
                
                // Initialize monthly data
                if (!processedData.monthlyData[monthKey]) {
                    processedData.monthlyData[monthKey] = {
                        inflows: 0,
                        outflows: 0,
                        net: 0
                    };
                }
                
                // Process based on transaction type
                if (amount > 0) {
                    processedData.totalInflows += amount;
                    processedData.monthlyData[monthKey].inflows += amount;
                    
                    // Check if it's a loan
                    if (transaction.Libelle && transaction.Libelle.toLowerCase().includes('kef')) {
                        const lender = 'KEF Investment';
                        if (!processedData.loans[lender]) {
                            processedData.loans[lender] = {
                                total: 0,
                                count: 0,
                                dates: []
                            };
                        }
                        processedData.loans[lender].total += amount;
                        processedData.loans[lender].count++;
                        processedData.loans[lender].dates.push(date);
                    }
                } else {
                    processedData.totalOutflows += Math.abs(amount);
                    processedData.monthlyData[monthKey].outflows += Math.abs(amount);
                    
                    // Process vendors
                    const vendor = transaction.Libelle || 'Unknown';
                    if (!processedData.vendors[vendor]) {
                        processedData.vendors[vendor] = {
                            total: 0,
                            count: 0,
                            category: categorizeVendor(vendor)
                        };
                    }
                    processedData.vendors[vendor].total += Math.abs(amount);
                    processedData.vendors[vendor].count++;
                    
                    // Categorize expenses
                    const category = categorizeExpense(transaction);
                    processedData.categories[category] += Math.abs(amount);
                }
                
                processedData.monthlyData[monthKey].net = 
                    processedData.monthlyData[monthKey].inflows - 
                    processedData.monthlyData[monthKey].outflows;
            });
        }

        // Categorize vendor based on name
        function categorizeVendor(vendorName) {
            const name = vendorName.toLowerCase();
            if (name.includes('construct') || name.includes('batiment')) return 'construction';
            if (name.includes('architect') || name.includes('etude')) return 'studies';
            if (name.includes('equipement') || name.includes('materiel')) return 'equipment';
            if (name.includes('bank') || name.includes('cih')) return 'fees';
            return 'other';
        }

        // Categorize expense
        function categorizeExpense(transaction) {
            const libelle = (transaction.Libelle || '').toLowerCase();
            if (libelle.includes('construct') || libelle.includes('gros')) return 'construction';
            if (libelle.includes('etude') || libelle.includes('architect')) return 'studies';
            if (libelle.includes('equipment') || libelle.includes('mobilier')) return 'equipment';
            if (libelle.includes('commission') || libelle.includes('frais')) return 'fees';
            return 'other';
        }

        // Update all displays
        function updateAllDisplays() {
            updateKPIs();
            updateCharts();
            updateTables();
            calculateProjections();
        }

        // Update KPIs
        function updateKPIs() {
            // Executive Summary KPIs
            const totalInvestmentRealized = processedData.totalOutflows;
            const monthlyBurnRate = calculateMonthlyBurnRate();
            const cashRunway = calculateCashRunway();
            
            document.getElementById('investmentRealized').textContent = 
                `$${(totalInvestmentRealized / 9000).toFixed(0)}K`;
            document.getElementById('investmentProgress').textContent = 
                `${((totalInvestmentRealized / 15840000) * 100).toFixed(1)}% Complete`;
            document.getElementById('burnRate').textContent = 
                `$${(monthlyBurnRate / 9000).toFixed(0)}K`;
            document.getElementById('cashRunway').textContent = 
                `${cashRunway}`;
            
            // Cash Flow KPIs
            document.getElementById('totalInflows').textContent = 
                `$${(processedData.totalInflows / 9000).toFixed(0)}K`;
            document.getElementById('totalOutflows').textContent = 
                `$${(processedData.totalOutflows / 9000).toFixed(0)}K`;
            document.getElementById('netCashPosition').textContent = 
                `$${((processedData.totalInflows - processedData.totalOutflows) / 9000).toFixed(0)}K`;
            
            // Vendor KPIs
            const vendorCount = Object.keys(processedData.vendors).length;
            const avgTransaction = processedData.totalOutflows / 
                Object.values(processedData.vendors).reduce((sum, v) => sum + v.count, 0);
            
            document.getElementById('activeVendors').textContent = vendorCount;
            document.getElementById('avgTransaction').textContent = 
                `$${(avgTransaction / 9).toFixed(0)}`;
            
            // Financing KPIs
            const totalLoans = Object.values(processedData.loans)
                .reduce((sum, loan) => sum + loan.total, 0);
            document.getElementById('totalLoans').textContent = 
                `$${(totalLoans / 9000).toFixed(0)}K`;
            document.getElementById('ltcRatio').textContent = 
                `${((totalLoans / 15840000) * 100).toFixed(1)}%`;
            
            // Cost KPIs
            document.getElementById('costPerSuite').textContent = 
                `$${(totalInvestmentRealized / 5 / 9000).toFixed(0)}K`;
            document.getElementById('budgetUtilization').textContent = 
                `${((totalInvestmentRealized / 15840000) * 100).toFixed(1)}%`;
            
            // Performance KPIs
            const cpi = calculateCPI();
            const spi = calculateSPI();
            document.getElementById('cpi').textContent = cpi.toFixed(2);
            document.getElementById('spi').textContent = spi.toFixed(2);
            document.getElementById('cpiTrend').textContent = 
                cpi >= 1 ? '✓ On Budget' : '⚠️ Over Budget';
            document.getElementById('spiTrend').textContent = 
                spi >= 1 ? '✓ On Schedule' : '⚠️ Behind Schedule';
        }

        // Calculate monthly burn rate
        function calculateMonthlyBurnRate() {
            const months = Object.keys(processedData.monthlyData).length;
            return months > 0 ? processedData.totalOutflows / months : 0;
        }

        // Calculate cash runway
        function calculateCashRunway() {
            const currentCash = processedData.totalInflows - processedData.totalOutflows;
            const burnRate = calculateMonthlyBurnRate();
            return burnRate > 0 ? Math.floor(currentCash / burnRate) : 0;
        }

        // Calculate Cost Performance Index
        function calculateCPI() {
            const budgetedCost = 4500000; // Construction budget
            const actualCost = processedData.categories.construction;
            const percentComplete = 0.3; // Estimated 30% complete
            return percentComplete > 0 ? (budgetedCost * percentComplete) / actualCost : 0;
        }

        // Calculate Schedule Performance Index
        function calculateSPI() {
            const plannedDuration = 24; // months
            const actualDuration = Object.keys(processedData.monthlyData).length;
            const percentComplete = 0.3;
            return actualDuration > 0 ? (plannedDuration * percentComplete) / actualDuration : 0;
        }

        // Initialize all charts
        function initializeCharts() {
            // Project Status Chart
            const projectStatusCtx = document.getElementById('projectStatusChart').getContext('2d');
            charts.projectStatus = new Chart(projectStatusCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Completed', 'In Progress', 'Remaining'],
                    datasets: [{
                        data: [20, 30, 50],
                        backgroundColor: ['#10b981', '#f59e0b', '#e5e7eb']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Investment Breakdown Chart
            const investmentCtx = document.getElementById('investmentBreakdownChart').getContext('2d');
            charts.investmentBreakdown = new Chart(investmentCtx, {
                type: 'pie',
                data: {
                    labels: ['Land', 'Construction', 'Decoration', 'Equipment', 'Operating Capital', 'Marketing'],
                    datasets: [{
                        data: [430000, 500000, 120000, 400000, 150000, 200000],
                        backgroundColor: [
                            '#1e3a8a', '#0284c7', '#10b981', 
                            '#f59e0b', '#ef4444', '#8b5cf6'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        },
                        datalabels: {
                            formatter: (value, ctx) => {
                                const sum = ctx.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((value / sum) * 100).toFixed(1) + '%';
                                return percentage;
                            },
                            color: '#fff'
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });

            // Cash Flow Chart
            const cashflowCtx = document.getElementById('cashflowChart').getContext('2d');
            charts.cashflow = new Chart(cashflowCtx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Inflows',
                        data: [],
                        borderColor: '#10b981',
                        backgroundColor: 'rgba(16, 185, 129, 0.1)',
                        tension: 0.3
                    }, {
                        label: 'Outflows',
                        data: [],
                        borderColor: '#ef4444',
                        backgroundColor: 'rgba(239, 68, 68, 0.1)',
                        tension: 0.3
                    }, {
                        label: 'Net Cash Flow',
                        data: [],
                        borderColor: '#1e3a8a',
                        backgroundColor: 'rgba(30, 58, 138, 0.1)',
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return 'MAD ' + (value / 1000).toFixed(0) + 'K';
                                }
                            }
                        }
                    }
                }
            });
        }

        // Update charts with processed data
        function updateCharts() {
            // Update cash flow chart
            if (charts.cashflow && processedData.monthlyData) {
                const sortedMonths = Object.keys(processedData.monthlyData).sort();
                const inflows = sortedMonths.map(month => processedData.monthlyData[month].inflows);
                const outflows = sortedMonths.map(month => processedData.monthlyData[month].outflows);
                const netFlow = sortedMonths.map(month => processedData.monthlyData[month].net);
                
                charts.cashflow.data.labels = sortedMonths;
                charts.cashflow.data.datasets[0].data = inflows;
                charts.cashflow.data.datasets[1].data = outflows;
                charts.cashflow.data.datasets[2].data = netFlow;
                charts.cashflow.update();
            }

            // Update vendor chart
            updateVendorChart();
            
            // Update other charts as needed
            updateFinancingCharts();
            updateCostCharts();
        }

        // Update vendor chart
        function updateVendorChart() {
            const vendorChartCtx = document.getElementById('vendorChart');
            if (!vendorChartCtx) return;
            
            const topVendors = Object.entries(processedData.vendors)
                .sort((a, b) => b[1].total - a[1].total)
                .slice(0, 10);
            
            if (charts.vendor) {
                charts.vendor.destroy();
            }
            
            charts.vendor = new Chart(vendorChartCtx.getContext('2d'), {
                type: 'bar',
                data: {
                    labels: topVendors.map(v => v[0].substring(0, 20) + '...'),
                    datasets: [{
                        label: 'Total Payments (MAD)',
                        data: topVendors.map(v => v[1].total),
                        backgroundColor: '#0284c7'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return 'MAD ' + (value / 1000).toFixed(0) + 'K';
                                }
                            }
                        }
                    }
                }
            });
        }

        // Update financing charts
        function updateFinancingCharts() {
            const financingPieCtx = document.getElementById('financingPieChart');
            if (!financingPieCtx) return;
            
            const loanData = Object.entries(processedData.loans);
            
            if (charts.financingPie) {
                charts.financingPie.destroy();
            }
            
            charts.financingPie = new Chart(financingPieCtx.getContext('2d'), {
                type: 'pie',
                data: {
                    labels: loanData.map(l => l[0]),
                    datasets: [{
                        data: loanData.map(l => l[1].total),
                        backgroundColor: ['#1e3a8a', '#0284c7', '#10b981', '#f59e0b']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        }

        // Update cost charts
        function updateCostCharts() {
            const costCategoryCtx = document.getElementById('costCategoryChart');
            if (!costCategoryCtx) return;
            
            const categoryData = Object.entries(processedData.categories);
            
            if (charts.costCategory) {
                charts.costCategory.destroy();
            }
            
            charts.costCategory = new Chart(costCategoryCtx.getContext('2d'), {
                type: 'doughnut',
                data: {
                    labels: categoryData.map(c => c[0].charAt(0).toUpperCase() + c[0].slice(1)),
                    datasets: [{
                        data: categoryData.map(c => c[1]),
                        backgroundColor: ['#1e3a8a', '#0284c7', '#10b981', '#f59e0b', '#ef4444']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        }

        // Update tables
        function updateTables() {
            // Update vendor table
            const vendorTableBody = document.getElementById('vendorTableBody');
            if (vendorTableBody) {
                const sortedVendors = Object.entries(processedData.vendors)
                    .sort((a, b) => b[1].total - a[1].total)
                    .slice(0, 10);
                
                vendorTableBody.innerHTML = sortedVendors.map(([vendor, data]) => `
                    <tr>
                        <td>${vendor}</td>
                        <td>MAD ${data.total.toFixed(0)}</td>
                        <td>${data.count}</td>
                        <td>${data.category}</td>
                    </tr>
                `).join('');
            }
        }

        // Calculate projections
        function calculateProjections() {
            const burnRate = calculateMonthlyBurnRate();
            const remainingBudget = 15840000 - processedData.totalOutflows;
            const monthsToComplete = remainingBudget / burnRate;
            
            // Update projection KPIs
            document.getElementById('estCompletionCost').textContent = 
                `$${((processedData.totalOutflows + remainingBudget * 1.1) / 9000).toFixed(0)}K`;
            document.getElementById('additionalFinancing').textContent = 
                `$${Math.max(0, (remainingBudget * 0.1) / 9000).toFixed(0)}K`;
            
            const completionDate = new Date();
            completionDate.setMonth(completionDate.getMonth() + Math.floor(monthsToComplete));
            document.getElementById('estCompletionDate').textContent = 
                completionDate.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });
        }

        // Export report functionality
        function exportReport() {
            const reportContent = document.documentElement.outerHTML;
            const blob = new Blob([reportContent], { type: 'text/html' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `VillaBahia_FinancialReport_${new Date().toISOString().split('T')[0]}.html`;
            a.click();
        }

        // Print report
        function printReport() {
            window.print();
        }

        // Use sample data if API fails
        function useSampleData() {
            // Sample data structure
            bankData = [
                { Date: '2024-01-15', Montant: -150000, Libelle: 'Construction Phase 1' },
                { Date: '2024-01-20', Montant: 500000, Libelle: 'KEF Investment Loan' },
                { Date: '2024-02-10', Montant: -75000, Libelle: 'Architect Fees' },
                { Date: '2024-02-15', Montant: -200000, Libelle: 'Materials Purchase' },
                { Date: '2024-03-01', Montant: 300000, Libelle: 'KEF Advisory Loan' },
                { Date: '2024-03-15', Montant: -100000, Libelle: 'Construction Phase 2' }
            ];
            
            processData();
            updateAllDisplays();
        }
    </script>
</body>
</html>
